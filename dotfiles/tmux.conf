# General
# set -g default-command "exec /bin/bash"
set-option -g default-shell $SHELL
set -g default-terminal "screen-256color"
#  screen-256color  gnome-256color  tmux-256color  xterm-256color
set -g history-limit 30000
set -sg escape-time 0
set -sg repeat-time 1000
setw -g mouse on
set -g renumber-windows on
set -g focus-events off
set -s set-clipboard off


# Binds
set -g mode-keys vi
set -g status-keys emacs

set -g prefix C-a
bind C-a send-prefix
unbind C-b

bind Escape copy-mode
# bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
unbind -T copy-mode-vi MouseDragEnd1Pane
unbind -T root MouseDrag1Pane
bind v copy-mode\; send -X begin-selection
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'C-v' send -X begin-selection\; send -X rectangle-toggle
# bind p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel '~/myconfig/scripts/tmux_copy_clipboard.sh'
bind -T copy-mode-vi t send-keys -X copy-pipe-and-cancel '~/myconfig/scripts/translate.sh -p'

bind Left  swap-pane -U
bind Down  swap-pane -D
bind Up    swap-pane -U
bind Right swap-pane -D

bind h split-window -h -c "#{pane_current_path}"\; swap-pane -U
bind j split-window -v -c "#{pane_current_path}"
bind k split-window -v -c "#{pane_current_path}"\; swap-pane -U
bind l split-window -h -c "#{pane_current_path}"

RESIZE_STEP=10
bind -r H resize-pane -L $RESIZE_STEP
bind -r J resize-pane -D $RESIZE_STEP
bind -r K resize-pane -U $RESIZE_STEP
bind -r L resize-pane -R $RESIZE_STEP

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 last-window
bind -n M-- swap-window -t :- \; select-window -t :-
bind -n M-= swap-window -t :+ \; select-window -t :+
bind -n M-h select-window -t :-
bind -n M-l select-window -t :+

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind C new-window -c "#{pane_current_path}"

bind r source-file ~/.tmux.conf \; display-message " Config reloaded."

bind -r Tab   select-window -t :+
bind -r S-Tab select-window -t :-
# bind & kill-window
bind x kill-pane
bind / command-prompt -p "(search down)" "send -X search-forward \"%%%\""
# bind s select-pane -t 2 \; send-keys C-c Enter Up C-m \; last-pane
# bind s select-pane -L \; send-keys C-c Enter Up C-m \; last-pane

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    # | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Smart pane switching with awareness of Vim splits and fzf.
# See: https://github.com/christoomey/vim-tmux-navigator
not_tmux="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|n?vim?x?)(diff)?|fzf)$'"
bind -n C-h if-shell "$not_tmux" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$not_tmux" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$not_tmux" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$not_tmux" "send-keys C-l"  "select-pane -R"
# bind -n C-\ if-shell "$not_tmux" "send-keys C-\\" "select-pane -l"

bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
# bind -T copy-mode-vi C-\ select-pane -l

bind -T copy-mode-vi DoubleClick1Pane send-keys -X clear-selection\; send-keys -FX search-forward "#{copy_cursor_word}"
bind -T copy-mode-vi TripleClick1Pane send-keys -X clear-selection
bind -T copy-mode-vi Escape send-keys -X cancel
bind -T copy-mode-vi z send-keys -X middle-line
bind C-e run-shell "~/myconfig/scripts/vim-edit-tmux-output"

bind F5 clear-history
bind M-x kill-window
bind X confirm-before kill-session


# Customization
set  -g base-index 1
setw -g pane-base-index 1
set  -g status-position bottom
set  -g status-right-length 80
set  -g status-left-length 50
set  -g status-justify left
setw -g monitor-activity on
set  -g visual-activity off
set  -g display-time 1000

# --title--
set -g set-titles on
set -g set-titles-string '#S - Tmux'
# setw -g automatic-rename

set -g status-fg colour250
set -g status-bg colour237
set -g status-interval 10
set -g status-left "#[fg=colour234]#[bg=$TMUX_MAIN_COLOUR] #S #[bg=default]  "
set -g status-left-style bold
set -g window-status-separator ' '
set -g status-right-style bold
set -g status-right '#(~/myconfig/dotfiles/tmux_status "#{pane_current_path}") '

setw -g mode-style bg=colour237,fg=$TMUX_MAIN_COLOUR,bold
setw -g window-status-style fg=colour252,bg=default,bold
setw -g window-status-current-style fg=colour16,bg=default,bold
setw -g window-status-activity-style bg=colour237,fg=default,none

set -g message-style fg=colour237,bg=$TMUX_MAIN_COLOUR,bold
set -g message-command-style fg=$TMUX_MAIN_COLOUR,bg=colour237,bold

set -g pane-border-style fg=colour242
set -g pane-active-border-style fg=$TMUX_MAIN_COLOUR

setw -g window-status-format         ' #[fg=colour234]#[bg=colour247]  #I  #[fg=colour247]#[bg=default] #W '
setw -g window-status-current-format ' #[fg=colour234]#[bg=colour12]  #I  #[fg=colour12]#[bg=default] #W '


# Work settings
# if-shell -b '[ -d ~/work ] ' \
    # "set -g status-left '#[fg=colour234]#[bg=colour113] #S #[bg=default]  '; \
     # set -g pane-active-border-style fg=colour113 "

# Remote mode
bind -T root F12  \
         set prefix None \;\
         set key-table off \;\
         set -g status-left "#[fg=colour234]#[bg=$TMUX_MAIN_COLOUR] #S #[bg=colour208] (remote mode) #[bg=default]  "\;\
         if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
         refresh-client -S \;\

bind -T off F12 \
         set -u prefix \;\
         set -u key-table \;\
         set -g status-left "#[fg=colour234]#[bg=$TMUX_MAIN_COLOUR] #S #[bg=default]  "\;\
         refresh-client -S


# Plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'schasse/tmux-jump'
set -g @jump-key 'space'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
