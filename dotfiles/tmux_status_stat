#!/bin/bash

#COLORS
r1='#[fg=colour203, bg=default]'
r2='#[fg=colour234, bg=colour203]'
g1='#[fg=colour113, bg=default]'
g2='#[fg=colour234, bg=colour113]'
p1='#[fg=colour140, bg=default]'
p2='#[fg=colour234, bg=colour140]'
y1='#[fg=colour185, bg=default]'
y2='#[fg=colour234, bg=colour185]'
w1='#[fg=colour252, bg=default]'
w2='#[fg=colour234, bg=colour252]'
c1='#[fg=colour115, bg=default]'
c2='#[fg=colour234, bg=colour115]'
b1='#[fg=colour110, bg=default]'
b2='#[fg=colour234, bg=colour110]'

cpu () {
    FREQ=$(($(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq)/1000))
    GFREQ=$(echo "$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq)\
        1000000" | awk '{printf "%.1f", $1 / $2}')
    CPUSAGE=$(top -bn1 | grep "Cpu(s)" | \
        sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | \
        awk '{printf "%2.0f", 100 - $1}')
    CURFREQ=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq)
    MAXFREQ=$(cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq)
    MIDFREQ=$(($MAXFREQ/2))
    MINFREQ=$(cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_min_freq)
    NUMPROC=$(nproc --ignore=1)

    if ((CURFREQ > MINFREQ)); then
        if ((CURFREQ < MAXFREQ)); then
            local ALERT=$y1
        fi
    else
            local ALERT=$g1
    fi

    echo -n "$c2 cp $c1 ${ALERT}${GFREQ} $c1${CPUSAGE}%#[default] "
}

fun () {
    if test -f "/sys/class/hwmon/hwmon1/fan1_input"
    then FUN=$(cat /sys/class/hwmon/hwmon1/fan1_input)
    else FUN=$(cat /sys/class/hwmon/hwmon2/fan1_input)
    fi

    echo -e " ${FUN} RPM #[default]"
}

temp () {
    TEMP=$(($(cat /sys/class/hwmon/hwmon2/temp1_input)/1000))

    if [[ $TEMP -ge 65 ]];then
        local ALERT=$r1
    fi

    echo -n "$c1${ALERT}${TEMP}Â°C #[default]"
}

bat () {
    # POWER=$(cat /sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A08:00/PNP0C0A:00/power_supply/BAT0/capacity)
    # STATE=$(cat /sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A08:00/PNP0C0A:00/power_supply/BAT0/status)

    local BAT_PATH='/org/freedesktop/UPower/devices/battery_BAT0'
    local STATUS=$(upower -i "$BAT_PATH" | grep state | awk '{print $2}')
    local BATTERY_PERC=$(upower -i "$BAT_PATH" | grep percentage | awk '{print $2}' | cut -d'%' -f1)
    local TIME_REMAINING="$(upower -i "$BAT_PATH" | grep 'time to empty' | awk '{print $4}')"

    if [[ $BATTERY_PERC -le 20 ]];then
        local ALERT=$r1
    fi

    if [[ $STATUS = "discharging" ]];then
        AC_OR_BAT='bt'
    else
        AC_OR_BAT='ac'
    fi

    echo -n "$g2 $AC_OR_BAT ${g1}${ALERT} ${BATTERY_PERC}% #[default]"

}

disk () {
    DISK_FREE=$(df -h | grep "/dev/sda3" | head -n1 | awk '{print $5, $4}')
    echo -n "$p2 ds $p1 $DISK_FREE #[default]"
}

mem () {
    MEM=$(free -h| tr -s ' ' $'\t' | grep Mem | cut -f7)
    echo -n "$y2 me $y1 $MEM #[default]"
}

sw () {
    SW=$(free -h| tr -s ' ' $'\t' | grep Swap | cut -f3)
    echo -n " sw $SW #[default]"
}

datetime () {
    echo -n "$w1 $(date +"%d %b") $w2 $(date +"%T") #[default]"
}

layout () {
    layout=$(xset -q | grep -A 0 'LED' | cut -c59-67)
    if [[ $layout -eq "000000000" ]]; then
        layout=US
    elif [[ $layout -eq "00001000" ]]; then
        layout=RU
    fi
    echo -n " $layout #[default]"
}

names () {
    echo -n " #[bold]#[bg=colour210]#[fg=colour234] ur #[bg=default]#[fg=colour210] #(whoami) \
 #[bg=colour229]#[fg=colour234] hs #[bg=default]#[fg=colour229] #H  "
}

def () {
    echo -n "#[default]"
}

separator () {
    echo -n " "
}


window_width=$(tmux display-message -p "#{window_width}")
window_height=$(tmux display-message -p "#{window_height}")

if [[ $window_width -gt 100 ]]; then
    # echo -n "$(hostname) "
    def
    cpu
    temp
    separator
    mem
    separator
    bat
    separator
    disk
    # sw
    # datetime
    # layout
    # fun
    # names
fi

